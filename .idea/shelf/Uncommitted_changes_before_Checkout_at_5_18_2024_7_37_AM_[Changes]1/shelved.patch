Index: game_play.py
===================================================================
diff --git a/game_play.py b/game_play.py
new file mode 100644
--- /dev/null	
+++ b/game_play.py	
@@ -0,0 +1,165 @@
+import pygame, sys, math
+from maze_generator import *
+
+def getImage(path: str, width: int, height: int):
+    img = pygame.image.load(rf'assets\Display\{path}').convert_alpha()
+    return pygame.transform.smoothscale(img, (width, height))
+
+class Button():
+    def __init__(self, dir_image, width, height, pos, size_x = None, size_y = None, radius = None):
+        self.image = getImage(rf'button_icon\{dir_image}', width, height)
+        self.x_pos = pos[0]
+        self.y_pos = pos[1]
+        self.size_x = size_x
+        self.size_y = size_y
+        self.radius = radius
+
+    def render(self, screen):
+        screen.blit(self.image, (0, 0))
+
+    def check_collision(self, position):
+        if self.radius is not None:
+            distance = math.sqrt((position[0] - self.x_pos) ** 2 + (position[1] - self.y_pos) ** 2)
+            return distance <= self.radius
+        else:
+            return (self.x_pos <= position[0] <= self.x_pos + self.size_x) and (self.y_pos <= position[1] <= self.y_pos + self.size_y)
+
+class Display:
+    def __init__(self, screen, fps, maze, mode):
+        # Chỉnh thông số screen
+        pygame.init()
+        self.screen = screen
+        self.clock = pygame.time.Clock()
+        self.fps = fps
+
+        self.maze = maze
+        self.mode = mode
+        self.maze.mazeGenerate()
+
+        width, height = screen.get_width(), screen.get_height()
+        self.img_background_1 = getImage(r'background\1.png', width, height)
+        self.img_background_2 = getImage(r'background\2.png', width, height)
+
+        self.button = [(Button('1.png', width, height, (1272, 499), radius=24),
+                        Button('1_1.png', width, height, (1272, 499))),
+
+                       (Button('2.png', width, height, (1272, 585), radius=30),
+                        Button('2_1.png', width, height, (1272, 585))),
+
+                       (Button('3.png', width, height, (1272, 670), radius=30),
+                        Button('3_1.png', width, height, (1272, 670))),
+
+                       (Button('4.png', width, height, (952, 627), radius=55),
+                        Button('4_1.png', width, height, (952, 627))),
+
+                       (Button('5.png', width, height, (1090, 622), radius=55),
+                        Button('5_1.png', width, height, (1090, 622))),
+
+                       (Button('6.png', width, height, (905, 630), radius=55),
+                        Button('6_1.png', width, height, (902, 623))),
+
+                       (Button('7.png', width, height, (1027, 625), radius=51),
+                        Button('7_1.png', width, height, (1027, 625))),
+
+                       (Button('8.png', width, height, (1150, 624), radius=50),
+                        Button('8_1.png', width, height, (1150, 624))),
+
+                       (Button('9.png', width, height, (946, 622), radius=50),
+                        Button('9_1.png', width, height, (946, 622))),
+
+                       (Button('10.png', width, height, (902, 623), radius=50),
+                        Button('10_1.png', width, height, (902, 623)))]
+
+    def show_button(self, index, MOUSE_POS):
+        if self.button[index][0].check_collision(MOUSE_POS):
+            self.button[index][1].render(self.screen)
+            return True
+        else:
+            self.button[index][0].render(self.screen)
+            return False
+
+    def run(self):
+        global zoom_size
+        running = True
+        pause = False
+
+        if self.maze.size == 10:
+            zoom_size = [10]
+        if self.maze.size == 40:
+            zoom_size = [40, 10]
+        if self.maze.size == 100:
+            zoom_size = [100, 40, 10]
+        index_zoom = 0
+
+        while running:
+            MOUSE_POS = pygame.mouse.get_pos()
+            self.screen.blit(self.img_background_1, (0, 0))
+            self.maze.render(self.screen, (41, 32))
+            self.screen.blit(self.img_background_2, (0, 0))
+
+            for i in range(3):
+                self.show_button(i, MOUSE_POS)
+
+            if self.mode == 'Auto':
+                if pause is False:
+                    self.show_button(8, MOUSE_POS)
+                else:
+                    self.show_button(3, MOUSE_POS)
+                self.show_button(4, MOUSE_POS)
+
+            if self.mode == 'Play':
+                if pause is False:
+                    self.show_button(9, MOUSE_POS)
+                else:
+                    self.show_button(5, MOUSE_POS)
+                self.show_button(6, MOUSE_POS)
+                self.show_button(7, MOUSE_POS)
+
+            for event in pygame.event.get():
+                if event.type == pygame.QUIT:
+                    pygame.quit()
+                    sys.exit()
+                if event.type == pygame.MOUSEBUTTONDOWN:
+                    if self.show_button(0, MOUSE_POS):
+                        print('HELP')
+                    if self.show_button(1, MOUSE_POS):
+                        print('LEADERBOARD')
+                    if self.show_button(2, MOUSE_POS):
+                        print('SETTING')
+
+                    if self.mode == 'Auto':
+                        if pause is False:
+                            if self.show_button(8, MOUSE_POS):
+                                pause = True
+                                print('Pause: ', pause)
+                        else:
+                            if self.show_button(3, MOUSE_POS):
+                                pause = False
+                                print('Pause: ', pause)
+                        if self.show_button(4, MOUSE_POS):
+                            print('Change')
+
+                    if self.mode == 'Play':
+                        if pause is False:
+                            if self.show_button(9, MOUSE_POS):
+                                pause = True
+                                print('Pause: ', pause)
+                        else:
+                            if self.show_button(5, MOUSE_POS):
+                                pause = False
+                                print('Pause: ', pause)
+                        if self.show_button(6, MOUSE_POS):
+                            index_zoom = (index_zoom + 1) % len(zoom_size)
+                            print(index_zoom)
+                        if self.show_button(7, MOUSE_POS):
+                            print('Hint')
+
+            pygame.display.update()
+            self.clock.tick(self.fps)
+
+Display(pygame.display.set_mode((1300, 750)), 60, Maze(100, 0, 0, 10, 10, 9.8), 'Play').run()
+'''
+MAZE 10 * 10: cell_size = 71
+MAZE 40 * 40: cell_size = 20
+MAZE 100 * 100: cell_size = 9.8
+'''
